import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
from telegram.error import BadRequest

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è ConversationHandler
MENU, ORDER, GET_PHONE, GET_LOCATION, VIEW_CART, CONFIRM_ORDER, DRINKS, HOME_FOOD = range(8)

# –ü—Ä–∏–º–µ—Ä –º–µ–Ω—é (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API)
home_food_menu = {
    "üçö –ü–ª–æ–≤ —É–∑–±–µ–∫—Å–∫–∏–π (–≥–æ–≤—è–¥–∏–Ω–∞)": 99,
    "üçù –ú–∞–∫–∞—Ä–æ–Ω—ã –ø–æ-—Ñ–ª–æ—Ç—Å–∫–∏ (–≥–æ–≤—è–¥–∏–Ω–∞)": 99,
    "ü•™ –°–∞–º—Å–∞ 3—à—Ç. (–≥–æ–≤—è–¥–∏–Ω–∞)": 99,
    "üç© –ë–µ–ª—è—à–∏ 2—à—Ç.": 99,
    "ü•ü –ú–∞–Ω—Ç—ã 3—à—Ç. (–≥–æ–≤—è–¥–∏–Ω–∞)": 99,
    "üßÜ –ö–æ—Ç–ª–µ—Ç—ã —Å –ø—é—Ä–µ 2—à—Ç. (–≥–æ–≤—è–¥–∏–Ω–∞)": 99,
    "ü´ì –ë–ª–∏–Ω—á–∏–∫–∏ 3—à—Ç.": 50,
    "ü´î –ë–ª–∏–Ω—á–∏–∫–∏ —Å –º—è—Å–æ–º 3—à—Ç. (–≥–æ–≤—è–¥–∏–Ω–∞)": 99,
    "üå≠ –°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ (–∫—É—Ä–∏–Ω–∞—è)": 30,
    "üçû –•–ª–µ–± –¢–∞—Ä—Ç–∏–Ω (–Ω–∞ –∑–∞–∫–≤–∞—Å–∫–µ)": 60,
    "üçû –•–ª–µ–± –ß–∏–∞–±–∞—Ç—Ç–∞": 30,
    "üçû –•–ª–µ–± –ë–µ–ª—ã–π –Ω–∞—Ä–µ–∑–∫–∞ 2—à—Ç. (–Ω–∞ –∑–∞–∫–≤–∞—Å–∫–µ)": 20,
    "üçû –•–ª–µ–± –ß–µ—Ä–Ω—ã–π —Å–æ–ª–æ–¥–æ–≤—ã–π –Ω–∞—Ä–µ–∑–∫–∞ 2—à—Ç. (–Ω–∞ –∑–∞–∫–≤–∞—Å–∫–µ)": 20
}

drinks_menu = {
    "ü´ñ –ß–∞–π": 20,
    "‚òïÔ∏è –ö–æ—Ñ–µ": 30,
    "üßÉ –°–æ–∫": 25,
    "ü•õ –í–æ–¥–∞": 10
}

# –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_cart = {}

# –•—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_phone_numbers = {}
user_locations = {}

# –¢–µ–ª–µ–≥—Ä–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
admin_chat_id = -4138037091  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —á–∏—Å–ª–æ–≤–æ–π chat ID

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['üìã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç', 'üõí –ó–∞–∫–∞–∑–∞—Ç—å'], ['üõç –ö–æ—Ä–∑–∏–Ω–∞']]
    await update.message.reply_text(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return MENU

async def show_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['ü•§ –ù–∞–ø–∏—Ç–∫–∏', 'üç≤ –î–æ–º–∞—à–Ω—è—è –µ–¥–∞'], ['üîô –ù–∞–∑–∞–¥']]
    await update.message.reply_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return MENU

async def show_drinks(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    menu_text = "–í–æ—Ç –Ω–∞—à–∏ –Ω–∞–ø–∏—Ç–∫–∏:\n"
    for item, price in drinks_menu.items():
        menu_text += f"{item}: {price} –±–∞—Ç\n"
    await update.message.reply_text(menu_text)
    reply_keyboard = [[item] for item in drinks_menu.keys()]
    reply_keyboard.append(['üõç –ö–æ—Ä–∑–∏–Ω–∞', 'üîô –ù–∞–∑–∞–¥'])
    await update.message.reply_text(
        '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return ORDER

async def show_home_food(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    menu_text = "–í–æ—Ç –Ω–∞—à–∞ –¥–æ–º–∞—à–Ω—è—è –µ–¥–∞:\n"
    for item, price in home_food_menu.items():
        menu_text += f"{item}: {price} –±–∞—Ç\n"
    await update.message.reply_text(menu_text)
    reply_keyboard = [[item] for item in home_food_menu.keys()]
    reply_keyboard.append(['üõç –ö–æ—Ä–∑–∏–Ω–∞', 'üîô –ù–∞–∑–∞–¥'])
    await update.message.reply_text(
        '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return ORDER

async def order(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    item = update.message.text
    if item in home_food_menu:
        user_cart[item] = user_cart.get(item, 0) + 1
        await update.message.reply_text(f"{item} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –∫–æ—Ä–∑–∏–Ω—É.\n–•–æ—Ç–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?", 
                                        reply_markup=ReplyKeyboardMarkup([[item] for item in home_food_menu.keys()] + [['üõç –ö–æ—Ä–∑–∏–Ω–∞', 'üîô –ù–∞–∑–∞–¥']], one_time_keyboard=True, resize_keyboard=True))
        return ORDER
    elif item in drinks_menu:
        user_cart[item] = user_cart.get(item, 0) + 1
        await update.message.reply_text(f"{item} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –∫–æ—Ä–∑–∏–Ω—É.\n–•–æ—Ç–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?", 
                                        reply_markup=ReplyKeyboardMarkup([[item] for item in drinks_menu.keys()] + [['üõç –ö–æ—Ä–∑–∏–Ω–∞', 'üîô –ù–∞–∑–∞–¥']], one_time_keyboard=True, resize_keyboard=True))
        return ORDER
    elif item == 'üîô –ù–∞–∑–∞–¥':
        return await start(update, context)
    elif item == 'üõç –ö–æ—Ä–∑–∏–Ω–∞':
        return await view_cart(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üõç –ö–æ—Ä–∑–∏–Ω–∞' –∏–ª–∏ 'üîô –ù–∞–∑–∞–¥'.")
        return ORDER

async def view_cart(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.message.from_user.id

    cart_text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n"
    for item, quantity in user_cart.items():
        cart_text += f"{item} x {quantity}\n"
    if not user_cart:
        cart_text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞."
    await update.message.reply_text(cart_text)

    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â–µ –Ω–µ—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
    if user_id not in user_phone_numbers:
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', 
                                        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)], ['üîô –ù–∞–∑–∞–¥']], one_time_keyboard=True, resize_keyboard=True))
        return GET_PHONE
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â–µ –Ω–µ—Ç –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–µ
    if user_id not in user_locations:
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.', 
                                        reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)], ['üîô –ù–∞–∑–∞–¥']], one_time_keyboard=True, resize_keyboard=True))
        return GET_LOCATION
    
    # –ï—Å–ª–∏ –æ–±–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —É–∂–µ –µ—Å—Ç—å, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–ª–∏ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç.", 
                                    reply_markup=ReplyKeyboardMarkup([['‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', 'üîô –ù–∞–∑–∞–¥']], one_time_keyboard=True, resize_keyboard=True))
    return CONFIRM_ORDER

async def confirm_order(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.message.from_user.id
    text = update.message.text

    if text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑':
        cart_text = "–í–∞—à –∑–∞–∫–∞–∑:\n"
        for item, quantity in user_cart.items():
            cart_text += f"{item} x {quantity}\n"
        
        user_phone = user_phone_numbers.get(user_id, '–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω')
        user_location = user_locations.get(user_id)
        location_text = f"{user_location.latitude}, {user_location.longitude}" if user_location else '–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞'
        
        order_text = f"{cart_text}\n–¢–µ–ª–µ—Ñ–æ–Ω: {user_phone}\n–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: {location_text}"

        try:
            await context.bot.send_message(chat_id=admin_chat_id, text=order_text)
            logging.info(f"Sent order to group: {order_text}")
            if user_location:
                await context.bot.send_location(chat_id=admin_chat_id, latitude=user_location.latitude, longitude=user_location.longitude)
                logging.info(f"Sent location to group: {user_location.latitude}, {user_location.longitude}")
        except BadRequest as e:
            logging.error(f"Failed to send message to group: {e}")
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return CONFIRM_ORDER
        
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
        user_cart.clear()
        return await start(update, context)
    elif text == 'üîô –ù–∞–∑–∞–¥':
        return await start(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑' –∏–ª–∏ 'üîô –ù–∞–∑–∞–¥'.")
        return CONFIRM_ORDER

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.contact:
        user_id = update.message.from_user.id
        user_phone_numbers[user_id] = update.message.contact.phone_number
        await update.message.reply_text(f'–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {update.message.contact.phone_number}.')
        return await view_cart(update, context)
    elif update.message.text == 'üîô –ù–∞–∑–∞–¥':
        return await start(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.")
        return GET_PHONE

async def get_location(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.location:
        user_id = update.message.from_user.id
        user_locations[user_id] = update.message.location
        await update.message.reply_text(f'–°–ø–∞—Å–∏–±–æ! –ú—ã –¥–æ—Å—Ç–∞–≤–∏–º –≤–∞—à –∑–∞–∫–∞–∑ –ø–æ –∞–¥—Ä–µ—Å—É: {update.message.location.latitude}, {update.message.location.longitude}.')
        return await view_cart(update, context)
    elif update.message.text == 'üîô –ù–∞–∑–∞–¥':
        return await start(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.")
        return GET_LOCATION

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ù–∞–¥–µ–µ–º—Å—è —É–≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞.', reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def main() -> None:
    application = Application.builder().token("7206388222:AAHdtplOSWT8G5b88-iIMeXIr9Xn85GWPAk").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            MENU: [
                MessageHandler(filters.Regex('^(üìã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç)$'), show_menu),
                MessageHandler(filters.Regex('^(üõí –ó–∞–∫–∞–∑–∞—Ç—å)$'), show_menu),
                MessageHandler(filters.Regex('^(ü•§ –ù–∞–ø–∏—Ç–∫–∏)$'), show_drinks),
                MessageHandler(filters.Regex('^(üç≤ –î–æ–º–∞—à–Ω—è—è –µ–¥–∞)$'), show_home_food),
                MessageHandler(filters.Regex('^(üõç –ö–æ—Ä–∑–∏–Ω–∞)$'), view_cart),
                MessageHandler(filters.Regex('^(üîô –ù–∞–∑–∞–¥)$'), start),  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            ],
            ORDER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, order),
                MessageHandler(filters.Regex('^(üîô –ù–∞–∑–∞–¥)$'), start),  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            ],
            CONFIRM_ORDER: [
                MessageHandler(filters.Regex('^(‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑)$'), confirm_order),
                MessageHandler(filters.Regex('^(üîô –ù–∞–∑–∞–¥)$'), start),  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            ],
            GET_PHONE: [
                MessageHandler(filters.CONTACT, get_phone),
                MessageHandler(filters.Regex('^(üîô –ù–∞–∑–∞–¥)$'), start),  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            ],
            GET_LOCATION: [
                MessageHandler(filters.LOCATION, get_location),
                MessageHandler(filters.Regex('^(üîô –ù–∞–∑–∞–¥)$'), start),  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)

    application.run_polling()

if __name__ == '__main__':
    main()
